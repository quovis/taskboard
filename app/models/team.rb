class Team < ActiveRecord::Base
  ################################################################################################################
  #
  # Associations
  #
  ################################################################################################################
  belongs_to :organization
  has_and_belongs_to_many :projects
  has_and_belongs_to_many :members
  has_and_belongs_to_many :users

  ################################################################################################################
  #
  # Validations
  #
  ################################################################################################################
  validates_uniqueness_of :name
  validates_presence_of :name, :organization

  ################################################################################################################
  #
  # Attributes Accessible
  #
  ################################################################################################################
  attr_accessible :name, :color

  ################################################################################################################
  #
  # Instance methods
  #
  ################################################################################################################
  def stories
    stories = projects.collect { |project| project.stories }.flatten
    stories = stories.sort_by {|story| [story.priority, story.updated_at] }
    stories.reverse
  end
end
